// <auto-generated />
using L2CSharP.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace L2CSharP.DataBase.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("L2CSharP.Model.Accounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("LastServer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWordCrypted")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("L2CSharP.Model.Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ClanId")
                        .HasColumnType("bigint");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("CurCP")
                        .HasColumnType("int");

                    b.Property<int>("CurHP")
                        .HasColumnType("int");

                    b.Property<int>("CurMP")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("Face")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("HairColor")
                        .HasColumnType("int");

                    b.Property<int>("HairStyle")
                        .HasColumnType("int");

                    b.Property<int>("Heading")
                        .HasColumnType("int");

                    b.Property<int>("IsGM")
                        .HasColumnType("int");

                    b.Property<int>("IsHero")
                        .HasColumnType("int");

                    b.Property<int>("IsNoble")
                        .HasColumnType("int");

                    b.Property<int>("Karma")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("ObjId")
                        .HasColumnType("int");

                    b.Property<int>("Online")
                        .HasColumnType("int");

                    b.Property<int>("PkKills")
                        .HasColumnType("int");

                    b.Property<int>("PvpKills")
                        .HasColumnType("int");

                    b.Property<int>("Race")
                        .HasColumnType("int");

                    b.Property<int>("SP")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.Property<int>("Z")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("L2CSharP.Model.CharacterItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AugmentId")
                        .HasColumnType("int");

                    b.Property<int>("EnchantLevel")
                        .HasColumnType("int");

                    b.Property<int>("IsEquipped")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<int>("ObjId")
                        .HasColumnType("int");

                    b.Property<long>("PlayerObjId")
                        .HasColumnType("bigint");

                    b.Property<int>("TimeLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerObjId");

                    b.ToTable("CharacterItem");
                });

            modelBuilder.Entity("L2CSharP.Model.CharacterShortcut", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<long>("CharId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<long>("Slot")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<long>("Page")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<int>("CharType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id", "CharId", "Slot", "Page");

                    b.HasIndex("CharId");

                    b.ToTable("CharacterShortcut");
                });

            modelBuilder.Entity("L2CSharP.Model.CharacterSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CharId")
                        .HasColumnType("bigint");

                    b.Property<int>("EnchantLevel")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharId");

                    b.ToTable("CharacterSkill");
                });

            modelBuilder.Entity("L2CSharP.Model.Clan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AllianceCrestId")
                        .HasColumnType("int");

                    b.Property<int>("AllianceId")
                        .HasColumnType("int");

                    b.Property<string>("AllianceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClanId")
                        .HasColumnType("int");

                    b.Property<int>("ClanLevel")
                        .HasColumnType("int");

                    b.Property<string>("ClanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CrestId")
                        .HasColumnType("int");

                    b.Property<int>("LeaderObjectId")
                        .HasColumnType("int");

                    b.Property<int>("RepScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clan");
                });

            modelBuilder.Entity("L2CSharP.Model.GameServers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Brackets")
                        .HasColumnType("int");

                    b.Property<int>("IsTestServer")
                        .HasColumnType("int");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("ServerHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameServers");
                });

            modelBuilder.Entity("L2CSharP.Model.Npc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Aggro")
                        .HasColumnType("int");

                    b.Property<int>("AtkSpd")
                        .HasColumnType("int");

                    b.Property<int>("AttackRange")
                        .HasColumnType("int");

                    b.Property<int>("BaseStats")
                        .HasColumnType("int");

                    b.Property<int>("CollisionHeight")
                        .HasColumnType("int");

                    b.Property<int>("CollisionRadius")
                        .HasColumnType("int");

                    b.Property<int>("Con")
                        .HasColumnType("int");

                    b.Property<int>("Dex")
                        .HasColumnType("int");

                    b.Property<int>("DropHerbGroup")
                        .HasColumnType("int");

                    b.Property<int>("Enchant")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<int>("HpReg")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("IsAttackable")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Lhand")
                        .HasColumnType("int");

                    b.Property<int>("Matk")
                        .HasColumnType("int");

                    b.Property<int>("MatkSpd")
                        .HasColumnType("int");

                    b.Property<int>("Mdef")
                        .HasColumnType("int");

                    b.Property<int>("Men")
                        .HasColumnType("int");

                    b.Property<int>("Mp")
                        .HasColumnType("int");

                    b.Property<int>("MpReg")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Patk")
                        .HasColumnType("int");

                    b.Property<int>("Pdef")
                        .HasColumnType("int");

                    b.Property<int>("Rhand")
                        .HasColumnType("int");

                    b.Property<int>("RunSpd")
                        .HasColumnType("int");

                    b.Property<int>("Sp")
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WalkSpd")
                        .HasColumnType("int");

                    b.Property<int>("Wit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Npc");
                });

            modelBuilder.Entity("L2CSharP.Model.SpawnList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Heading")
                        .HasColumnType("int");

                    b.Property<int>("LocX")
                        .HasColumnType("int");

                    b.Property<int>("LocY")
                        .HasColumnType("int");

                    b.Property<int>("LocZ")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NpcTemplateId")
                        .HasColumnType("bigint");

                    b.Property<byte>("PeriodOfDay")
                        .HasColumnType("tinyint");

                    b.Property<int>("RespawnDelay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NpcTemplateId");

                    b.ToTable("SpawnList");
                });

            modelBuilder.Entity("L2CSharP.Model.Weapon", b =>
                {
                    b.Property<short>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ItemId"));

                    b.Property<string>("AdditionalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("AtkSpeed")
                        .HasColumnType("smallint");

                    b.Property<short>("AvoidModify")
                        .HasColumnType("smallint");

                    b.Property<string>("BodyPart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ChangeWeaponId")
                        .HasColumnType("smallint");

                    b.Property<short>("Critical")
                        .HasColumnType("smallint");

                    b.Property<short>("CrystalCount")
                        .HasColumnType("smallint");

                    b.Property<string>("CrystalType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Crystallizable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Depositable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destroyable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dropable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<short>("Enchant4SkillId")
                        .HasColumnType("smallint");

                    b.Property<byte>("Enchant4SkillLvl")
                        .HasColumnType("tinyint");

                    b.Property<short>("HitModify")
                        .HasColumnType("smallint");

                    b.Property<short>("MDam")
                        .HasColumnType("smallint");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("MpConsume")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("OnCastSkillChance")
                        .HasColumnType("smallint");

                    b.Property<short>("OnCastSkillId")
                        .HasColumnType("smallint");

                    b.Property<byte>("OnCastSkillLvl")
                        .HasColumnType("tinyint");

                    b.Property<short>("OnCritSkillChance")
                        .HasColumnType("smallint");

                    b.Property<short>("OnCritSkillId")
                        .HasColumnType("smallint");

                    b.Property<byte>("OnCritSkillLvl")
                        .HasColumnType("tinyint");

                    b.Property<short>("PDam")
                        .HasColumnType("smallint");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<short>("RndDam")
                        .HasColumnType("smallint");

                    b.Property<string>("Sellable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ShieldDef")
                        .HasColumnType("smallint");

                    b.Property<short>("ShieldDefRate")
                        .HasColumnType("smallint");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Soulshots")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Spiritshots")
                        .HasColumnType("tinyint");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<string>("Tradeable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Weight")
                        .HasColumnType("smallint");

                    b.HasKey("ItemId");

                    b.ToTable("Weapon");
                });

            modelBuilder.Entity("L2CSharP.Model.Character", b =>
                {
                    b.HasOne("L2CSharP.Model.Clan", "Clan")
                        .WithMany("Members")
                        .HasForeignKey("ClanId");

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("L2CSharP.Model.CharacterItem", b =>
                {
                    b.HasOne("L2CSharP.Model.Character", "Character")
                        .WithMany("Items")
                        .HasForeignKey("PlayerObjId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("L2CSharP.Model.CharacterShortcut", b =>
                {
                    b.HasOne("L2CSharP.Model.Character", "Character")
                        .WithMany("Shortcuts")
                        .HasForeignKey("CharId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("L2CSharP.Model.CharacterSkill", b =>
                {
                    b.HasOne("L2CSharP.Model.Character", "Character")
                        .WithMany("Skills")
                        .HasForeignKey("CharId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("L2CSharP.Model.SpawnList", b =>
                {
                    b.HasOne("L2CSharP.Model.Npc", "Npc")
                        .WithMany("Spawns")
                        .HasForeignKey("NpcTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("L2CSharP.Model.Character", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Shortcuts");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("L2CSharP.Model.Clan", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("L2CSharP.Model.Npc", b =>
                {
                    b.Navigation("Spawns");
                });
#pragma warning restore 612, 618
        }
    }
}
